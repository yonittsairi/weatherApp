{"version":3,"sources":["logo.svg","service/StorageService.js","service/taskService.js","cmps/Cities.jsx","service/UtilService.js","cmps/Weather.jsx","service/favService.js","store/action/favActions.js","cmps/WeatherApp.jsx","cmps/NavBar.jsx","pages/FavoriteList.jsx","App.js","reportWebVitals.js","store/reducer/favReducer.js","store/store.js","index.js"],"names":["StorageService","load","key","str","localStorage","getItem","JSON","parse","save","val","stringify","setItem","store","value","sessionStorage","clear","taskService","getCities","getCitiesByID","getForecast","window","headers","city","a","url","axios","get","res","console","log","data","Cities","cities","loadCity","map","index","className","onClick","Key","LocalizedName","Country","UtilService","makeId","length","txt","possible","i","charAt","Math","floor","random","getRandomInt","min","max","dateFormatter","timeStampStart","dateFormat","Date","toString","dayName","substring","month","dayNum","Weather","props","foreCast","cityWeather","DailyForecasts","forecst","Night","Icon","NIcon","Day","DIcon","date","Temperature","Minimum","Value","toFixed","Maximum","IconPhrase","src","celcious","favService","removeFav","addFav","query","favs","favId","filter","favi","push","dispatch","then","type","savedFav","fav","_WeatherApp","state","currCityId","isFav","curCityname","Id","name","includes","setState","handleChange","event","target","toggleFavorite","changFormat","this","htmlFor","placeholder","onChange","Component","mapDispatchToProps","WeatherApp","connect","favsModule","NavBar","to","_FavoriteList","favList","getfavs","copy","search","FavoriteList","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","loggedinUser","initialState","rootReducer","combineReducers","action","editedfavs","_id","regex","RegExp","filterBy","text","test","inStock","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca37a09c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const StorageService = {\r\n    load,\r\n    save,\r\n    store,\r\n    clear\r\n\r\n}\r\n\r\nfunction load(key) {\r\n    const str = localStorage.getItem(key)\r\n    return JSON.parse(str)\r\n}\r\n\r\nfunction save(key, val) {\r\n    const str = JSON.stringify(val)\r\n    localStorage.setItem(key, str)\r\n}\r\nfunction clear() {\r\n    sessionStorage.clear();\r\n}\r\n\r\nfunction store(key, value) {\r\n    sessionStorage[key] = JSON.stringify(value);\r\n}\r\n","// import { storageService } from './asyncStorageService'\r\n// import { httpService } from './httpService'\r\nimport axios from 'axios';\r\nimport { StorageService } from './StorageService';\r\nexport const taskService = {\r\n    getCities,\r\n    // getById,\r\n    // remove,\r\n    // save,\r\n    // query,\r\n    // start,\r\n    getCitiesByID,\r\n    getForecast\r\n}\r\n\r\nwindow.taskService = taskService\r\n// Note: due to async, must run one by one...\r\n\r\n// var axios = Axios.create({\r\n//     withCredentials: false,\r\n//     headers: {\r\n//         'Access-Control-Allow-Origin': '*',\r\n//         'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n//     }\r\n// })\r\nconst headers = {\r\n    'Content-Type': '*'\r\n\r\n\r\n};\r\nasync function getCities(city) {\r\n\r\n\r\n    const url = `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=a6G5iYMGG7hF7iiEnGgh41oa4pANsd46&q=${city}`;\r\n    try {\r\n        const res = await axios.get(`${url}`, { headers })\r\n        console.log(res.data);\r\n        await StorageService.save('search', res.data)\r\n        return res.data\r\n    } catch (err) {\r\n\r\n        throw err\r\n    }\r\n}\r\nasync function getCitiesByID(city) {\r\n    console.log(city);\r\n    const url = `http://dataservice.accuweather.com/locations/v1/${city}?apikey=a6G5iYMGG7hF7iiEnGgh41oa4pANsd46`;\r\n    try {\r\n        const res = await axios.get(`${url}`, { headers })\r\n        console.log(res.data);\r\n        await StorageService.save('FAVLIST', res.data)\r\n        return res.data\r\n    } catch (err) {\r\n\r\n        throw err\r\n    }\r\n}\r\n\r\nasync function getForecast(key) {\r\n    console.log(key);\r\n    // const url = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${city}?apikey=a6G5iYMGG7hF7iiEnGgh41oa4pANsd46&details=true&metric=true`;\r\n    try {\r\n        const res = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}?apikey=a6G5iYMGG7hF7iiEnGgh41oa4pANsd46`)\r\n        // const res = await axios.get(`${url}`, { headers })\r\n        await StorageService.save('forecast', res.data)\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(err);\r\n\r\n        //  throw new Error(err)\r\n        return StorageService.load('forecast')\r\n    }\r\n\r\n}\r\n// function getById(taskId) {\r\n//     // return storageService.get('task', taskId)\r\n//     return httpService.get(`task/${taskId}`)\r\n// }\r\n// function remove(taskId) {\r\n\r\n//     return httpService.delete(`task/${taskId}`)\r\n// }\r\n// function start(task) {\r\n//     return httpService.put(`task/${task._id}/start`, task)\r\n// }\r\n\r\n// async function update(task) {\r\n//     const editedTask = await httpService.put(`task/${task._id}`, task)\r\n//     // console.log(editedTask);\r\n//     return editedTask\r\n// }\r\n\r\n// function query(filterBy) {\r\n//     console.log(filterBy);\r\n//     var queryStr = (!filterBy) ? '' : `?title=${filterBy.title}&tags=${filterBy.tags}&minPrice=${filterBy.minPrice}&maxPrice=${filterBy.maxPrice}&sort=anaAref`\r\n//     console.log(queryStr);\r\n//     return httpService.get(`task${queryStr}`)\r\n//     // return storageService.query('task')\r\n// }\r\n","import React from 'react'\r\n\r\nexport default function Cities({ cities, loadCity }) {\r\n\r\n\r\n\r\n    if (!cities) return null\r\n    const search = cities.map((city, index) => {\r\n        return <li className=\"flex align-center\" key={city.Key + city.LocalizedName} onClick={() => loadCity(city.Key, city.LocalizedName)}>{city.LocalizedName},\r\n     {city.Country.LocalizedName}</li>\r\n    })\r\n\r\n    return search\r\n}\r\n","export const UtilService = {\r\n    makeId,\r\n    getRandomInt,\r\n    dateFormatter,\r\n    dateFormat\r\n};\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min); // Min is inclusive, Max is Exclusive\r\n}\r\nfunction dateFormatter(timeStampStart) {\r\n    const dateFormat = new Date(timeStampStart).toString()\r\n    // const dateEndFormat = new Date(timeStampEnd).toString()\r\n    const dayName = dateFormat.substring(0, 3)\r\n    const month = dateFormat.substring(4, 8)\r\n    const dayNum = dateFormat.substring(8, 10)\r\n    const time = dateFormat.substring(15, 21)\r\n    // const timeEnd = dateEndFormat.substring(15, 21)\r\n    return (\r\n        <section>\r\n            <b> {dayName + ', ' + month + dayNum}</b>\r\n            {/* <div>{time + ' - ' + timeEnd}</div> */}\r\n        </section>\r\n    )\r\n}\r\nfunction dateFormat(timeStampStart) {\r\n    const dateFormat = new Date(timeStampStart).toString()\r\n    const dayName = dateFormat.substring(0, 3)\r\n    const month = dateFormat.substring(4, 8)\r\n    const dayNum = dateFormat.substring(8, 10)\r\n    const time = dateFormat.substring(15, 21)\r\n    return dayName + ', ' + month + dayNum\r\n\r\n}","import React from 'react'\r\nimport { UtilService } from './../service/UtilService';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nexport default function Weather(props) {\r\n\r\n    const foreCast = props.cityWeather.DailyForecasts\r\n    console.log(foreCast);\r\n    if (!foreCast) return null\r\n\r\n    const weather = foreCast.map((forecst, index) => {\r\n        // let date = UtilService.dateFormat(forecst.EpochDate)\r\n        if (+forecst.Night.Icon < 10) { var NIcon = '0' } else NIcon = ''\r\n        if (+forecst.Day.Icon < 10) { var DIcon = '0' } else DIcon = ''\r\n        var date = UtilService.dateFormatter(forecst.Date)\r\n        const min = ((forecst.Temperature.Minimum.Value - 32) * 5 / 9).toFixed(0)\r\n        const max = ((forecst.Temperature.Maximum.Value - 32) * 5 / 9).toFixed(0)\r\n        return <li className=\"card flex column align-center\" key={forecst.Date} >\r\n            <div className=\"flex column align-center\">\r\n                <span>{date}</span>\r\n                <span className=\"flex  align-center space-between\">\r\n                    <WbSunnyIcon />\r\n                    <span>{forecst.Day.IconPhrase}</span>\r\n                </span>\r\n                <img src={`https://developer.accuweather.com/sites/default/files/${DIcon}${forecst.Day.Icon}-s.png`} />\r\n            </div>\r\n            <div className=\"card flex column align-center\">\r\n                <span className=\"flex align-center space-between\">\r\n                    <Brightness2Icon />\r\n                    <span>{forecst.Night.IconPhrase}</span>\r\n                </span>\r\n                <img src={`https://developer.accuweather.com/sites/default/files/${NIcon}${forecst.Night.Icon}-s.png`} />\r\n                {props.celcious && <span>{min} -  {max}  <span>&#8451;</span></span>}\r\n                {!props.celcious && <span>{forecst.Temperature.Minimum.Value} -  {forecst.Temperature.Maximum.Value}  <span>\t&#8457;</span></span>}\r\n\r\n            </div>\r\n        </li >\r\n    })\r\n\r\n\r\n    return weather\r\n\r\n\r\n\r\n}\r\n\r\n","// import { storageService } from './asyncStorageService'\r\n// import { httpService } from './httpService'\r\nimport { StorageService } from './StorageService';\r\n\r\nexport const favService = {\r\n    removeFav,\r\n    addFav,\r\n    query\r\n}\r\n\r\nwindow.favService = favService\r\n\r\nasync function query() {\r\n    var favs = await StorageService.load('favoriteCities')\r\n    return favs\r\n}\r\nasync function removeFav(favId) {\r\n    var favs = await StorageService.load('favoriteCities')\r\n    if (!favs) {\r\n        return null\r\n    }\r\n    else favs = favs.filter(favi => favi !== favId)\r\n    console.log(favs);\r\n    StorageService.save('favoriteCities', favs)\r\n    return favId\r\n}\r\n\r\nasync function addFav(favId) {\r\n    var favs = await StorageService.load('favoriteCities')\r\n    if (!favs) {\r\n        favs = []\r\n        favs.push(favId)\r\n    }\r\n    else favs.push(favId)\r\n    StorageService.save('favoriteCities', favs)\r\n    return favId\r\n}\r\n","\r\nimport { favService } from './../../service/favService';\r\n\r\nexport function loadFavs(filterBy) {\r\n    return (dispatch) => {\r\n        favService.query(filterBy)\r\n            .then(favs => { dispatch({ type: 'SET_FAVS', favs }) })\r\n    }\r\n}\r\n\r\nexport function removeFav(favId) {\r\n    console.log('actions remove', favId);\r\n    return (dispatch) => {\r\n        favService.removeFav(favId).then(() => { dispatch({ type: 'REMOVE_FAV', favId }) })\r\n    }\r\n}\r\n\r\nexport function addFav(favId) {\r\n    console.log(favId, 'actions add');\r\n    return (dispatch) => {\r\n        favService.addFav(favId).then((savedFav) => { dispatch({ type: 'ADD_FAV', fav: savedFav }) })\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { taskService } from '../service/taskService.js'\r\nimport Cities from './Cities.jsx';\r\nimport Weather from './Weather.jsx';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { addFav, removeFav } from '../store/action/favActions';\r\nimport { connect } from 'react-redux'\r\n\r\nexport class _WeatherApp extends Component {\r\n    state = {\r\n        cityWeather: {},\r\n        cities: [],\r\n        currCityId: \"\",\r\n        isFav: false,\r\n        curCityname: '',\r\n        celcious: true,\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let id = \"215854\"\r\n        this.loadCity(id)\r\n\r\n\r\n    }\r\n\r\n    loadCity = async (Id, name = \"TLV\") => {\r\n        const cityWeather = await taskService.getForecast(Id)\r\n        console.log(cityWeather);\r\n        // let favoriteCities = this.state.favoriteCities\r\n        const { favs } = this.props\r\n        let isFav = favs.includes(Id)\r\n\r\n        await this.setState({ ...this.state, cities: [], cityWeather, currCityId: Id, isFav: isFav, curCityname: name })\r\n        // this.setState({ currCityId: id })\r\n    }\r\n\r\n    handleChange = async (event) => {\r\n        const value = event.target.value\r\n        let city = value\r\n        const cities = await taskService.getCities(city)\r\n        await this.setState({ cities })\r\n\r\n    }\r\n    toggleFavorite = (Id) => {\r\n        const { favs } = this.props\r\n        if (favs.includes(Id)) {\r\n            console.log('remove');\r\n            this.props.removeFav(Id)\r\n        }\r\n        else this.props.addFav(Id)\r\n\r\n        this.setState({ ...this.state, isFav: !this.state.isFav })\r\n\r\n\r\n    }\r\n    changFormat = () => {\r\n        this.setState({ ...this.state, celcious: !this.state.celcious })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { cities, cityWeather, currCityId, isFav, curCityname, celcious } = this.state\r\n        if (!cityWeather) return <label>load</label>\r\n\r\n        return (\r\n            <div  >\r\n                <button className=\"format\" onClick={this.changFormat}>\t&#8457; / \t&#8451;</button>\r\n                <div className=\"flex column align-center\">\r\n\r\n                    <label htmlFor=\"title\" className=\"\"> <input type=\"text\" placeholder=\"Search\" className=\"title\" name=\"title\" onChange={this.handleChange}></input></label>\r\n                    {cities.length > 0 && <ul className=\"cities\"> <Cities cities={cities} loadCity={this.loadCity} /></ul>}\r\n                </div>\r\n                <h1>{curCityname}</h1>\r\n                {!isFav && <FavoriteBorderIcon onClick={() => this.toggleFavorite(currCityId)} />}\r\n                {isFav && < FavoriteIcon onClick={() => this.toggleFavorite(currCityId)} />}\r\n                <ul className=\"card-grid \"> <Weather cityWeather={cityWeather} celcious={celcious} /></ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        favs: state.favsModule.favs,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    addFav,\r\n    removeFav\r\n}\r\n\r\n\r\nexport const WeatherApp = connect(mapStateToProps, mapDispatchToProps)(_WeatherApp);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <header className=\"main-header flex align-center space-between\">\r\n\r\n            <Link to={\"/\"}>    <div className=\"fs30 logo\">Weathter</div>    </Link>\r\n            <nav className=\"flex align-center space-between \">\r\n\r\n                <ul className=\"header-list flex align-center clean-list\">\r\n                    <Link to={\"/favorite\"}>  <li className=\"header-link\">Favorite</li></Link>\r\n                    <Link to={\"/\"}>    <li className=\"header-link\">Home</li></Link>\r\n\r\n\r\n\r\n                </ul>\r\n\r\n            </nav>\r\n\r\n\r\n        </header >\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { addFav, removeFav } from './../store/action/favActions';\r\nimport { connect } from 'react-redux'\r\nimport { taskService } from './../service/taskService';\r\n\r\nexport class _FavoriteList extends Component {\r\n    state = {\r\n        favList: []\r\n    }\r\n    componentDidMount() {\r\n        this.getfavs()\r\n    }\r\n    async getfavs() {\r\n        const { favs } = this.props\r\n        var { favList } = this.state\r\n        var copy = favList\r\n        for (let i = 0; i <= favs.length - 1; i++) {\r\n            console.log(favs[i]);\r\n            let a = await taskService.getCitiesByID(favs[i])\r\n            copy.push(a)\r\n\r\n        }\r\n\r\n        this.setState({ favList: copy })\r\n    }\r\n\r\n\r\n    render() {\r\n        var { favList } = this.state\r\n        if (favList.length < 1) return null\r\n        const search = favList.map((city, index) => {\r\n            return <li className=\"flex justify-center\" key={city.Key + city.LocalizedName} >{city.LocalizedName},\r\n             {city.Country.LocalizedName}</li>\r\n        })\r\n        return <div>{search}</div>\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        favs: state.favsModule.favs,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    addFav,\r\n    removeFav\r\n}\r\n\r\n\r\nexport const FavoriteList = connect(mapStateToProps, mapDispatchToProps)(_FavoriteList);\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { WeatherApp } from './cmps/WeatherApp.jsx';\nimport NavBar from './cmps/NavBar';\nimport { Switch, Route } from 'react-router-dom'\nimport { FavoriteList } from './pages/FavoriteList';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n\n        <Route component={FavoriteList} path=\"/favorite\" />\n        <Route component={WeatherApp} path=\"/\" />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StorageService } from '../../service/StorageService.js'\r\nconst favs = StorageService.load('favoriteCities') || []\r\nlet localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\n\r\nconst initialState = {\r\n    favs,\r\n}\r\nexport function favReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_FAVS':\r\n            return { ...state, favs: action.favs }\r\n        case 'EDIT_FAV':\r\n            const editedfavs = state.favs.map(fav => {\r\n                if (fav._id === action.fav._id) {\r\n                    return action.fav;\r\n                }\r\n                return fav;\r\n\r\n            })\r\n            console.log(editedfavs);\r\n            return { ...state, favs: editedfavs }\r\n        case 'ADD_FAV':\r\n            console.log('adding  fav', action.fav)\r\n            state = { ...state, favs: [...state.favs, action.fav] }\r\n            return state\r\n        case 'FILTER':\r\n            const regex = new RegExp(action.filterBy.text, 'i')\r\n            if (action.filterBy.type === \"All\" && action.filterBy.text === \"\") {\r\n                state = { ...state, favs, filterBy: action.filterBy }\r\n                return state\r\n            }\r\n            else {\r\n                state = {\r\n                    ...state, favs: favs.filter(fav => ((regex.test(fav.name)\r\n                        && fav.inStock === action.filterBy.type\r\n                        && fav.type === action.filterBy.type\r\n\r\n                    ))), filterBy: action.filterBy\r\n                }\r\n                return state\r\n            }\r\n        case 'REMOVE_FAV':\r\n            console.log('removing  fav', action.fav)\r\n            state = { ...state, favs: state.favs.filter(fav => fav !== action.favId) }\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\n\r\nimport { favReducer } from './reducer/favReducer.js';\r\n\r\nconst rootReducer = combineReducers({\r\n    favsModule: favReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/main.scss'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store'\nimport { HashRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store} >\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}